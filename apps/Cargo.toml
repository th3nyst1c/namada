[package]
name = "namada_apps"
description = "Namada CLI apps"
resolver = "2"
default-run = "namada"
authors.workspace = true
edition.workspace = true
documentation.workspace = true
homepage.workspace = true
keywords.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
version.workspace = true

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "namada_apps"
path = "src/lib/mod.rs"

# Namada CLI that aggregates some common commands for the node and the client
[[bin]]
doc = false
name = "namada"
path = "src/bin/namada/main.rs"

# Namada node
[[bin]]
doc = false
name = "namadan"
path = "src/bin/namada-node/main.rs"

# Namada client
[[bin]]
doc = false
name = "namadac"
path = "src/bin/namada-client/main.rs"

# Namada wallet
[[bin]]
doc = false
name = "namadaw"
path = "src/bin/namada-wallet/main.rs"

# Namada relayer
[[bin]]
doc = false
name = "namadar"
path = "src/bin/namada-relayer/main.rs"

[features]
default = ["std"]
mainnet = [
  "namada/mainnet",
]
std = ["ed25519-consensus/std", "rand/std", "rand_core/std", "namada/std", "namada_sdk/std"]
# for integration tests and test utilies
testing = ["namada_test_utils"]
benches = ["testing", "namada_test_utils"]
integration = []


[dependencies]
namada = {path = "../shared", features = ["multicore", "http-client", "tendermint-rpc"]}
namada_sdk = {path = "../sdk", default-features = false, features = ["wasm-runtime", "download-params"]}
namada_test_utils = {path = "../test_utils", optional = true}
ark-serialize.workspace = true
ark-std.workspace = true
arse-merkle-tree = { workspace = true, features = ["blake2b"] }
assert_matches.workspace = true
async-trait.workspace = true
base64.workspace = true
bech32.workspace = true
bimap.workspace = true
blake2b-rs.workspace = true
borsh.workspace = true
borsh-ext.workspace = true
byte-unit.workspace = true
byteorder.workspace = true
clap.workspace = true
color-eyre.workspace = true
config.workspace = true
data-encoding.workspace = true
derivative.workspace = true
directories.workspace = true
ed25519-consensus.workspace = true
ethabi.workspace = true
ethbridge-bridge-events.workspace = true
ethbridge-events.workspace = true
eyre.workspace = true
fd-lock.workspace = true
flate2.workspace = true
futures.workspace = true
itertools.workspace = true
lazy_static.workspace= true
ledger-namada-rs.workspace = true
ledger-transport-hid.workspace = true
libc.workspace = true
libloading.workspace = true
masp_primitives = { workspace = true, features = ["transparent-inputs"] }
masp_proofs = { workspace = true, features = ["bundled-prover", "download-params"] }
num_cpus.workspace = true
num256.workspace = true
num-rational.workspace = true
num-traits.workspace = true
once_cell.workspace = true
orion.workspace = true
pretty_assertions.workspace = true
prost-types.workspace = true
prost.workspace = true
rand_core.workspace = true
rand.workspace = true
rayon.workspace = true
regex.workspace = true
reqwest.workspace = true
ripemd.workspace = true
rlimit.workspace = true
rpassword.workspace = true
serde_bytes.workspace = true
serde_json = {workspace = true, features = ["raw_value"]}
serde.workspace = true
sha2.workspace = true
signal-hook.workspace = true
sysinfo.workspace = true
tar.workspace = true
tempfile.workspace = true
tendermint-config.workspace = true
thiserror.workspace = true
tokio = {workspace = true, features = ["full"]}
toml.workspace = true
tonic.workspace = true
tower-abci.workspace = true
tower.workspace = true
tracing-appender.workspace = true
tracing-log.workspace = true
tracing-subscriber = { workspace = true, features = ["std", "json", "ansi", "tracing-log"]}
tracing.workspace = true
winapi.workspace = true
zeroize.workspace = true
warp = "0.3.2"
bytes = "1.1.0"

[target.'cfg(not(windows))'.dependencies]
rocksdb = { workspace = true, features = ['jemalloc'] } # jemalloc is not supported on windows

[target.'cfg(windows)'.dependencies]
rocksdb = { workspace = true }

[dev-dependencies]
assert_matches = "1.5.0"
namada = {path = "../shared", default-features = false, features = ["testing", "wasm-runtime"]}
namada_test_utils = {path = "../test_utils"}
bit-set.workspace = true
proptest.workspace = true
test-log.workspace = true
tokio-test.workspace = true

[build-dependencies]
git2.workspace = true
